buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:1.2.6.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'groovy'

buildDir = 'build'

jar {
	baseName = 'example'
	version = '1'
}

eclipse {
    classpath {
        defaultOutputDir = file("${buildDir}/bin")
    }
}

sourceSets {
  main {
    java { srcDirs = [] }    // no source dirs for the java compiler
    groovy { srcDirs = ["src/main/java"] }  // compile   everything in src/ with groovy
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile("org.springframework.boot:spring-boot-starter-batch")
	compile('org.springframework.mobile:spring-mobile-device')
	compile("org.springframework.boot:spring-boot-devtools")

	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
	compile('commons-lang:commons-lang:2.5')
	compile('commons-io:commons-io:2.2')
	compile('commons-fileupload:commons-fileupload:1.3.1')
	compile('commons-beanutils:commons-beanutils:1.9.2')

	compile('org.apache.poi:poi:3.16')
	compile('org.apache.poi:poi-ooxml:3.16')
	compile('org.apache.poi:poi-ooxml-schemas:3.16')
	compile('org.apache.cxf:cxf-core:3.0.0')

	compile('com.opencsv:opencsv:3.9')

	compile('org.mariadb.jdbc:mariadb-java-client:1.3.7')

	compile('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')

	compile('mysql:mysql-connector-java')

	compile('org.codehaus.groovy:groovy-all')

	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

}

bootRun {
  environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}

springBoot {
  mainClass="com.example.demo.Application"
}

war {
  baseName = 'example'
}


[compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'
[compileGroovy, compileTestGroovy]*.groovyOptions*.encoding = 'UTF-8'
